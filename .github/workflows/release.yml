name: Release

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build-release:
    name: Build Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            artifact_name: vmips_rust
            asset_name: vmips_rust-linux-amd64
          - os: windows-latest
            artifact_name: vmips_rust.exe
            asset_name: vmips_rust-windows-amd64.exe
          - os: macos-latest
            artifact_name: vmips_rust
            asset_name: vmips_rust-macos-amd64

    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      
      - name: Build release binary
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --verbose
      
      - name: Upload binary to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/release/${{ matrix.artifact_name }}
          asset_name: ${{ matrix.asset_name }}
          tag: ${{ github.ref }}
          overwrite: true

  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build-release
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Get version from tag
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}
      
      - name: Generate changelog
        id: changelog
        run: |
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          git log --pretty=format:"- %s" $(git describe --tags --abbrev=0 HEAD^)..HEAD >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: VMIPS Rust ${{ steps.get_version.outputs.VERSION }}
          body: |
            # VMIPS Rust ${{ steps.get_version.outputs.VERSION }}
            
            ${{ steps.changelog.outputs.changelog }}
            
            ## Installation
            Download the appropriate binary for your platform and run it.
            
            ## Documentation
            See the [README.md](https://github.com/${{ github.repository }}/blob/${{ steps.get_version.outputs.VERSION }}/README.md) for usage instructions.
          draft: false
          prerelease: false